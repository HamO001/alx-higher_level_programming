The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

def matrix_divided(matrix, div):
    """
    Divides all elements of a matrix by a given number.

    Args:
        matrix (list): A list of lists containing integers or floats.
        div (int/float): The number to divide each element of the matrix by.

    Returns:
        list: A new matrix containing the result of dividing each element of the original matrix by div.

    Raises:
        TypeError: If matrix is not a list of lists containing integers or floats.
        TypeError: If div is not an int or float.
        ZeroDivisionError: If div is zero.
        ValueError: If all rows of the matrix do not have the same size.

    Examples:
        >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        >>> div = 2
        >>> matrix_divided(matrix, div)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

        >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        >>> div = '2'
        >>> matrix_divided(matrix, div)
        Traceback (most recent call last):
            ...
        TypeError: div must be a number

        >>> matrix = [[1, 2, 3], [4, 5], [7, 8, 9]]
        >>> div = 2
        >>> matrix_divided(matrix, div)
        Traceback (most recent call last):
            ...
        ValueError: All rows of the matrix must have the same size

        >>> matrix = [[1, 2, 3], [4, 'a', 6], [7, 8, 9]]
        >>> div = 2
        >>> matrix_divided(matrix, div)
        Traceback (most recent call last):
            ...
        TypeError: Matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        >>> div = 0
        >>> matrix_divided(matrix, div)
        Traceback (most recent call last):
            ...
        ZeroDivisionError: division by zero
